{"name":"Bitcoin.org","tagline":"Bitcoin.org website","body":"![Build Status](https://travis-ci.org/bitcoin-dot-org/bitcoin.org.svg?branch=master)\r\n\r\n## How To Participate\r\n\r\n*Bitcoin.org needs volunteers like you!*  Here are some ways you can help:\r\n\r\n* \"Watch\" this repository to be notified of issues and Pull Requests\r\n  (PRs) that could use your attention. Scroll to the top of this page\r\n  and click the *Watch* button to get notifications by email and on your\r\n  GitHub home page.\r\n\r\n    Alternatively, email volunteer coordinator Dave Harding\r\n    <dave@dtrt.org> with a short list of your interests and skills, and\r\n    he'll email you when there's an issue or PR that could use your\r\n    attention.\r\n\r\n* Help [write new documentation][] for the [developer\r\n  documentation pages][] or [upcoming full node page][], or **review [PRs\r\n  adding new documentation][].** You don't need to be a Bitcoin expert\r\n  to review a PR---these docs are written for non-experts, so we need to\r\n  know if non-experts find them confusing or incomplete. If you review a\r\n  PR and don't find any problems worth commenting about, leave a \"Looks\r\n  Good To Me (LGTM)\" comment.\r\n\r\n* [Submit new wallets][] for the [Choose Your Wallet page][], or\r\n  help us [review wallet submissions][]. **Reviewers with Apple iOS\r\n  hardware especially needed**---email <dave@dtrt.org> to\r\n  be notified about iOS wallets needing review.\r\n\r\n* [Translate Bitcoin.org into another language][] using [Transifex][] or\r\n  help review new and updated translations. **Translation coordinator\r\n  needed** to answer translator questions and help process\r\n  reviews---email <dave@dtrt.org> for details.\r\n\r\n* Add Bitcoin events to the [events page][] either by [editing `_events.yml`][edit events]\r\n  according to the [event instructions][] or by filling in a [pre-made\r\n  events issue][].\r\n\r\n* Help improve Bitcoin.org using your unique skills. We can always use\r\n  the help of writers, editors, graphic artists, web designers, and anyone\r\n  else to enhance Bitcoin.org's [current content][] or to add new\r\n  content. See the **list of [recommended starter projects][]** or email\r\n  volunteer coordinator Dave Harding <dave@dtrt.org> to start a\r\n  conversation about how you can help Bitcoin.org.\r\n\r\nYou can always report problems or help improve bitcoin.org by opening a [new issue][] or [pull request][] on [GitHub][].\r\n\r\n[choose your wallet page]: https://bitcoin.org/en/choose-your-wallet\r\n[current content]: https://bitcoin.org/\r\n[developer documentation pages]: https://bitcoin.org/en/developer-documentation\r\n[edit events]: https://github.com/bitcoin-dot-org/bitcoin.org/edit/master/_events.yml\r\n[event instructions]: #events\r\n[events page]: https://bitcoin.org/en/events\r\n[GitHub]: https://github.com/bitcoin-dot-org/bitcoin.org\r\n[new issue]: https://github.com/bitcoin-dot-org/bitcoin.org/issues/new\r\n[pre-made events issue]: https://github.com/bitcoin-dot-org/bitcoin.org/issues/new?title=New%20event&body=%20%20%20%20-%20date%3A%20YYYY-MM-DD%0A%20%20%20%20%20%20title%3A%20%22%22%0A%20%20%20%20%20%20venue%3A%20%22%22%0A%20%20%20%20%20%20address%3A%20%22%22%0A%20%20%20%20%20%20city%3A%20%22%22%0A%20%20%20%20%20%20country%3A%20%22%22%0A%20%20%20%20%20%20link%3A%20%22%22\r\n[PRs adding new documentation]: https://github.com/bitcoin-dot-org/bitcoin.org/pulls?q=is%3Aopen+label%3A%22Dev+Docs%22+is%3Apr\r\n[pull request]: #working-with-github\r\n[recommended starter projects]: https://github.com/bitcoin-dot-org/bitcoin.org/wiki/Starter-Projects\r\n[review wallet submissions]: https://github.com/bitcoin-dot-org/bitcoin.org/pulls?q=is%3Aopen+label%3Awallet+is%3Apr\r\n[submit new wallets]: #adding-a-wallet\r\n[transifex]: https://www.transifex.com/projects/p/bitcoinorg/\r\n[translate Bitcoin.org into another language]: #how-to-translate\r\n[upcoming full node page]: https://github.com/bitcoin-dot-org/bitcoin.org/pull/711\r\n[write new documentation]: #developer-documentation\r\n\r\n### Working With GitHub\r\n\r\nGitHub allows you to make changes to a project using git, and later submit them in a \"pull request\" so they can be reviewed and discussed. Many online how-tos exist so you can learn git, [here's a good one](https://www.atlassian.com/git/tutorial/git-basics).\r\n\r\nIn order to use GitHub, you need to [sign up](http://github.com/signup) and [set up git](https://help.github.com/articles/set-up-git). You will also need to click the **Fork** button on the bitcoin.org [GitHub page](https://github.com/bitcoin-dot-org/bitcoin.org) and clone your GitHub repository into a local directory with the following command lines:\r\n\r\n```\r\ngit clone (url provided by GitHub on your fork's page) bitcoin.org\r\ncd bitcoin.org\r\ngit remote add upstream https://github.com/bitcoin-dot-org/bitcoin.org.git\r\n```\r\n\r\n**How to send a pull request**\r\n\r\n1. Checkout to your master branch. `git checkout master`\r\n2. Create a new branch from the master branch. `git checkout -b (any name)`\r\n3. Edit files and [preview](#previewing) the result.\r\n4. Track changes in files. `git add -A`\r\n5. Commit your changes. `git commit -m '(short description for your change)'`\r\n6. Push your branch on your GitHub repository. `git push origin (name of your branch)`\r\n7. Click on your branch on GitHub and click the **Compare / pull request** button to send a pull request.\r\n\r\nWhen submitting a pull request, please take required time to discuss your changes and adapt your work. It is generally a good practice to split unrelated changes into separate branches and pull requests.\r\n\r\n**Travis Continuous Integration (CI)**\r\n\r\nShortly after your Pull Request (PR) is submitted, a Travis CI job will\r\nbe added to [our queue](https://travis-ci.org/bitcoin-dot-org/bitcoin.org). This\r\nwill build the site and run some basic checks. If the job fails, you\r\nwill be emailed a link to the build log and the PR will indicate a\r\nfailed job. Read the build report and try to correct the problem---but\r\nif you feel confused or frustrated, please ask for help on the PR (we're\r\nalways happy to help).\r\n\r\nIf you don't want a particular commit to be tested, add `[ci skip]`\r\nanywhere in its commit message.\r\n\r\nIf you'd like to setup Travis on your own repository so you can test\r\nbuilds before opening a pull request, it's really simple:\r\n\r\n1. Make sure the master branch of your repository is up to date with the\r\n   bitcoin-dot-org/bitcoin.org master branch.\r\n\r\n2. Open [this guide](http://docs.travis-ci.com/user/getting-started/)\r\n   and perform steps one, two, and four. (The other steps are already\r\n   done in our master branch.)\r\n\r\n3. After you push a branch to your repository, go to your branches page\r\n   (e.g. for user harding, github.com/harding/bitcoin.org/branches). A\r\n   yellow circle, green checkmark, or red X will appear near the branch\r\n   name when the build finishes, and clicking on the icon will take you\r\n   to the corresponding build report.\r\n\r\n**How to make additional changes in a pull request**\r\n\r\nYou simply need to push additional commits on the appropriate branch of your GitHub repository. That's basically the same steps as above, except you don't need to re-create the branch and the pull request.\r\n\r\n**How to reset and update your master branch with latest upstream changes**\r\n\r\n1. Fetch upstream changes. `git fetch upstream`\r\n2. Checkout to your master branch. `git checkout master`\r\n3. Replace your master branch by the upstream master branch. `git reset --hard upstream/master`\r\n4. Replace your master branch on GitHub. `git push origin master -f`\r\n\r\n**Advanced GitHub Workflow**\r\n\r\nIf you continue to contribute to Bitcoin.org beyond a single pull\r\nrequest, you may want to use a more [advanced GitHub\r\nworkflow](https://gist.github.com/harding/1a99b0bad37f9498709f).\r\n\r\n### Previewing\r\n\r\n#### Preview Small Text Changes\r\n\r\nSimple text changes can be previewed live on bitcoin.org. You only need to click anywhere on the page and hold your mouse button for one second. You'll then be able to edit the page just like a document. Changes will be lost as soon as the page is refreshed.\r\n\r\n#### Build The Site Locally\r\n\r\nFor anything more than simple text previews, you will need to build the\r\nsite. If you can't do this yourself using the instructions below, please\r\n[open a pull request][pull request] with your suggested change and one\r\nof the site developers will create a preview for you.\r\n\r\nTo build the site, you need to go through a one-time installation\r\nprocedure that takes 15 to 30 minutes.  After that you can build the\r\nsite an unlimited number of times with no extra work.\r\n\r\n##### Install The Dependencies\r\n\r\nBefore building the site, you need to install the following\r\ndependencies and tools, which are pretty easy on any modern Linux:\r\n\r\n**Install binary libraries and tools**\r\n\r\nOn recent versions of Ubuntu and Debian, you can run the following\r\ncommand to ensure you have the required libraries, headers, and tools:\r\n\r\n    sudo apt-get install build-essential git libicu-dev zlib1g-dev\r\n\r\n**Install RVM**\r\n\r\nInstall RVM using either the [easy instructions](https://rvm.io/) or the\r\n[more secure instructions](https://rvm.io/rvm/security).\r\n\r\nRead the instructions printed to your console during setup to enable the\r\n`rvm` command in your shell.  After installation, you need to run the\r\nfollowing command:\r\n\r\n    source ~/.rvm/scripts/rvm\r\n\r\n**Install Ruby 2.0.0**\r\n\r\nTo install Ruby 2.0.0, simply run this command:\r\n\r\n    rvm install ruby-2.0.0\r\n\r\nSometimes this will find a pre-compiled Ruby package for your Linux\r\ndistribution, but sometimes it will need to compile Ruby from scratch\r\n(which takes about 15 minutes).\r\n\r\nAfter Ruby 2.0.0 is installed, make it your default Ruby:\r\n\r\n    rvm alias create default ruby-2.0.0\r\n\r\nAnd tell your system to use it:\r\n\r\n    rvm use default\r\n\r\n(Note: you can use a different default Ruby, but if you ever change\r\nyour default Ruby, you must re-run the `gem install bundle` command\r\ndescribed below before you can build the site. If you ever receive a\r\n\"eval: bundle: not found\" error, you failed to re-run `gem install\r\nbundle`.)\r\n\r\n**Install Bundle**\r\n\r\nWhen you used RVM to install Ruby, it also installed the `gem` program.\r\nUse that program to install bundle:\r\n\r\n    gem install bundle\r\n\r\n**Install the Ruby dependencies**\r\n\r\nEnsure you checked out the site repository as described in [Working with\r\nGitHub](#working-with-github). Then change directory to the top-level of\r\nyour local repository (replace `bitcoin.org` with the full path to your local\r\nrepository clone):\r\n\r\n    cd bitcoin.org\r\n\r\nAnd install the necessary dependencies using Bundle:\r\n\r\n    bundle install\r\n\r\nNote that some of the dependencies (particularly nokogiri) can take a\r\nlong time to install on some systems, so be patient.\r\n\r\nOnce Bundle completes successfully, you can preview or build the site.\r\n\r\n##### Preview The Site\r\n\r\nTo preview the website in your local browser, make sure you're in the\r\n`bitcoin.org` directory and run the following command:\r\n\r\n    make preview\r\n\r\nThis will compile the site (takes 5 to 10 minutes; see the [speed up\r\ninstructions](#fast-partial-previews-or-builds)) and then print the a message like this:\r\n\r\n    Server address: http://0.0.0.0:4000\r\n    Server running... press ctrl-c to stop.\r\n\r\nVisit the indicated URL in your browser to view the site.\r\n\r\n##### Build The Site\r\n\r\nTo build the site exactly like we do for the deployment server, make\r\nsure you're in the `bitcoin.org` directory and run:\r\n\r\n    make\r\n\r\nThe resulting HTML for the entire site will be placed in the `_site`\r\ndirectory.  The following alternative options are available:\r\n\r\n    ## After you build the site, you can run all of the tests (may take awhile)\r\n    make test\r\n\r\n    ## Or you can build the site and run some quick tests with one command:\r\n    make valid\r\n\r\n    ## Or build the site and run all tests\r\n    make all\r\n\r\n#### Fast Partial Previews Or Builds\r\n\r\nIn order to preview some changes faster, you can disable all plugins and\r\nlanguages except those you need by prefixing the `ENABLED_LANGS` and\r\n`ENABLED_PLUGINS` environment variables to your command line.  For\r\nexample, do this to disable everything:\r\n\r\n    ## Fast preview, takes less than 30 seconds\r\n    ENABLED_PLUGINS=\"\" ENABLED_LANGS=\"\" make preview\r\n\r\n    ## Fast build and tests, takes less than 50 seconds\r\n    ## Some tests may fail in fast mode; use -i to continue despite them\r\n    ENABLED_PLUGINS=\"\" ENABLED_LANGS=\"\" make -i valid\r\n\r\nThen to enable some plugins or languages, you can add them back in.\r\nFor example:\r\n\r\n    ## Slower (but still pretty fast) build and test\r\n    ENABLED_PLUGINS=\"events autocrossref\" ENABLED_LANGS=\"en fr\" make -i valid\r\n\r\nPlugins include:\r\n\r\n| Plugin       | Seconds | Remote APIs    | Used For\r\n|--------------|---------|----------------|------------------------\r\n| alerts       | 5       | --             | Network alert pages\r\n| autocrossref | 90      | --             | Developer documentation\r\n| contributors | 5       | GitHub.com     | Contributor listings\r\n| events       | 5       | Meetup.com; Google Maps | Events page\r\n| glossary     | 30      | --             | Developer glossary\r\n| redirects    | 20      | --             | Redirects from old URLs\r\n| releases     | 10      | --             | Bitcoin Core release notes; Download page\r\n| sitemap      | 10      | --             | /sitemap.xml\r\n\r\nNotes: some plugins interact with each other or with translations; for example running\r\n'autocrossref' and 'glossary' takes longer than running each other\r\nseparately. Also, plugins that use remote APIs may take a long time to\r\nrun if the API site is running slow.\r\n\r\nFor a list of languages, look in the `_translations` directory.\r\n\r\n#### Publishing Previews\r\n\r\nYou can publish your previews online to any static hosting service.\r\n[GitHub pages](https://pages.github.com/) is a free service available to\r\nall GitHub users that works with Bitcoin.org's site hierarchy.\r\n\r\nBefore building a preview site, it is recommended that you set the\r\nenvironmental variable `BITCOINORG_BUILD_TYPE` to \"preview\".  This will\r\nenable some content that would otherwise be hidden and also create a\r\nrobots.txt file that will help prevent the site from being indexed by\r\nsearch engines and mistaken for the actual Bitcoin.org website.\r\n\r\nIn the bash shell, you can do this by running the following command line\r\nbefore building you preview:\r\n\r\n    export BITCOINORG_BUILD_TYPE=preview\r\n\r\nYou can also add this line to your `~/.bashrc` file if you frequently\r\nbuild site previews so that you don't have to remember to run it for\r\neach shell.\r\n\r\n## Developer Documentation\r\n\r\nMost parts of the documentation can be found in the [_includes](https://github.com/bitcoin-dot-org/bitcoin.org/tree/master/_includes)\r\ndirectory. Updates, fixes and improvements are welcome and can submitted using [pull requests](#working-with-github) on GitHub.\r\n\r\n**Mailing List**: General discussions can take place on the\r\n[mailing list](https://groups.google.com/forum/#!forum/bitcoin-documentation).\r\n\r\n**TODO List**: New content and suggestions for improvements can be submitted\r\nto the [TODO list](https://github.com/bitcoin-dot-org/bitcoin.org/wiki/Documentation-TODO).\r\nYou are also welcome if you want to assign yourself to any task.\r\n\r\n**Style Guide**: For better consistency, the [style guide](https://github.com/bitcoin-dot-org/bitcoin.org/wiki/Documentation-Style-Guide)\r\ncan be used as a reference for terminology, style and formatting. Suggested changes\r\ncan also be submitted to this guide to keep it up to date.\r\n\r\n**Cross-Reference Links**: Cross-reference links can be defined in\r\n_includes/references.md. Terms which should automatically link to these\r\nreferences are defined in _autocrossref.yaml .\r\n\r\n### New Glossary Entries\r\n\r\nAdd new English glossary entries in the `_data/glossary/en/` directory.\r\nCopy a previous glossary entry to get the correct YAML variables\r\n(suggest using block.yaml as a template).\r\n\r\nNon-English glossary entries are not currently supported.  You'll have\r\nto update the glossary.rb plugin and templates to support them.\r\n\r\n### New Developer Search terms\r\n\r\nYou can add new search terms or categories directly to the `devsearches`\r\narray in `_config.yaml`.  Comments in that file should provide full\r\ndocumentation.\r\n\r\n## Translation\r\n\r\n### How To Translate\r\n\r\nYou can join a translation team on [Transifex](https://www.transifex.com/projects/p/bitcoinorg/) and start translating or improving existing translations.\r\n\r\n* You must be a native speaker for the language you choose to translate.\r\n* Please be careful to preserve the original meaning of each text.\r\n* Sentences and popular expressions should sound native in your language.\r\n* You can check the result on the [live preview](http://bitcointx.us.to/) and [test small changes](#preview-small-text-changes).\r\n* Translations need to be reviewed by a reviewer or coordinator before publication.\r\n* Once reviewed, translations can be [submitted](#import-translations) in a pull request on GitHub.\r\n* **In doubt, please contact coordinators on Transifex. That'll be much appreciated.**\r\n\r\n### Import Translations\r\n\r\n**Update translations**: You can update the relevant language file in \\_translations/ and from the root of the git repository run ./\\_contrib/updatetx.rb to update layouts and templates for this language. You should also make sure that no url has been changed by translators. If any page needs to be moved, please add [redirections](#redirections).\r\n\r\n**Add a new language**: You can put the language file from Transifex in \\_translations and add the language in \\_config.yml in the right display order for the language bar. Make sure to review all pages and check all links.\r\n\r\n### Update English Strings\r\n\r\nAny change in the English text can be done through a pull request on GitHub. If your changes affect the HTML layout of a page, you should apply fallback HTML code for other languages until they are updated.\r\n\r\n    {% case page.lang %}\r\n    {% when 'fr' %}\r\n      (outdated french content)\r\n    {% else %}\r\n      (up to date english content)\r\n    {% endcase %}\r\n\r\n**When translation is needed**: If you want all changes you've made to be re-translated, you can simply update the resource file (en.yml) on Transifex.\r\n\r\n**When translation is not needed**: If you are only pushing typo fixes and that you don't want translators to redo all their work again, you can use the Transifex client to pull translations, update en.yml and push back all translations at once:\r\n\r\n    tx init\r\n    tx set --auto-remote https://www.transifex.com/projects/p/bitcoinorg/\r\n    tx pull -a -s --skip\r\n    tx set --source -r bitcoinorg.bitcoinorg -l en translations/bitcoinorg.bitcoinorg/en.yml\r\n    (update en.yml)\r\n    tx push -s -t -f --skip --no-interactive\r\n\r\n## Posts\r\n\r\n### Events\r\n\r\nIf you're not comfortable with GitHub pull requests, please submit an\r\nevent using the button near the bottom of the [Events\r\npage](https://bitcoin.org/en/events).\r\n\r\nTo create an event pull request, place the event in `_events.yml` and adhere to this format:\r\n\r\n```\r\n- date: 2014-02-21\r\n  title: \"2014 Texas Bitcoin Conference\"\r\n  venue: \"Circuit of the Americas™ - Technology and Conference Center\"\r\n  address: \"9201 Circuit of the Americas Blvd\"\r\n  city: \"Austin, TX\"\r\n  country: \"United States\"\r\n  link: \"http://texasbitcoinconference.com/\"\r\n```\r\n\r\nEvents that have a [Meetup.com](http://www.meetup.com/) page with a\r\npublicly-viewable address and \"Bitcoin\" in the event title should\r\nalready be displayed on the [events page][]. (Please open a [new\r\nissue][] if a Bitcoin meetup event isn't displayed.)\r\n\r\n### Release Notes\r\n\r\nTo create a new Bitcoin Core release, create a new file in the\r\n`_releases/` directory. Any file name ending in `.md` is fine, but we\r\nrecommend naming it after the release, such as `0.10.0.md`\r\n\r\nThen copy in the following YAML header (the part between the three dashes, ---):\r\n~~~\r\n---\r\n# This file is licensed under the MIT License (MIT) available on\r\n# http://opensource.org/licenses/MIT.\r\n\r\n## Required value below populates the %v variable (note: % needs to be escaped in YAML if it starts a value)\r\nrequired_version: 0.10.0\r\n## Optional release date.  May be filled in hours/days after a release\r\noptional_date: 2015-02-16\r\n## Optional title.  If not set, default is: Bitcoin Core version %v released\r\noptional_title: Bitcoin Core version %v released\r\n## Optional magnet link.  To get it, open the torrent in a good BitTorrent client\r\n## and View Details, or install the transmission-cli Debian/Ubuntu package\r\n## and run: transmission-show -m <torrent file>\r\n#\r\n## Link should be enclosed in quotes and start with: \"magnet:?\r\noptional_magnetlink:\r\n\r\n## The --- below ends the YAML header. After that, paste the release notes.\r\n## Warning: this site's Markdown parser commonly requires you make two\r\n## changes to the release notes from the Bitcoin Core source tree:\r\n##\r\n## 1. Make sure both ordered and unordered lists are preceded by an empty\r\n## (whitespace only) line, like the empty line before this list item.\r\n##\r\n## 2. Place URLs inside angle brackets, like <http://bitcoin.org/bin>\r\n\r\n---\r\n```\r\n\r\nThen start at the top of the YAML header and read the comments, filling\r\nin and replacing information as necessary, and then reformatting the\r\nrelease notes (if necessary) as described by the last lines of the YAML\r\nheader.\r\n\r\nDownload links will automatically be set to the defaults using the current\r\nrelease version number, but if you need to change any download URL, edit\r\nthe file `_templates/download.html`\r\n\r\nYou can then create a pull request to the\r\nmaster branch and Travis CI will automatically build it and make sure\r\nthe links you provided return a \"200 OK\" HTTP header. (The actual files\r\nwill not be downloaded to save bandwidth.) Alternatively, you can build\r\nthe site locally with `make all` to run the same quality assurance tests.\r\n\r\nThe file can be edited later to add any optional information (such as a\r\nrelease date) that you didn't have when you created the file.\r\n\r\n#### Preparing a release in advance\r\n\r\nIt's nice to prepare a release pull request in advance so that the\r\nBitcoin Core developers can just click \"Merge Pull Request\" when the new\r\nversion is released.  Here's the recommended recipe, where `<VERSION>`\r\nis the particular version:\r\n\r\n1. Create a new branch named `bitcoin-core-<VERSION>`.  You can either\r\n   do this locally or in GitHub's web GUI.\r\n\r\n2. Follow the instructions in the [Release Notes][] section to create a\r\n   new release.  You should leave the `optional_date` blank unless you\r\n   happen to know the date of the planned release.\r\n\r\n3. Push the branch to the https://github.com/bitcoin-dot-org/bitcoin.org\r\n   repository so any contributor can edit it. **Don't** open a pull\r\n   request yet.\r\n\r\n4. Travis CI will build the site from the branch and then run the tests.\r\n   The tests will fail because they expect the release binaries to be\r\n   present and you're preparing this release request in advance of them\r\n   being uploaded.\r\n\r\n5. Open the failed Travis CI log.  At the end, it will say something like:\r\n\r\n        ERROR:\r\n        Error: Could not retrieve /bin/bitcoin-core-0.10.1/bitcoin-0.10.1-win64-setup.exe\r\n        Error: Could not retrieve /bin/bitcoin-core-0.10.1/bitcoin-0.10.1-win32-setup.exe\r\n        [...]\r\n\r\n6. Copy the errors from above into a text file and remove everything\r\n   except for the URLs so that what's left are lines that look like:\r\n\r\n        /bin/bitcoin-core-0.10.1/bitcoin-0.10.1-win64-setup.exe\r\n        /bin/bitcoin-core-0.10.1/bitcoin-0.10.1-win32-setup.exe\r\n        [...]\r\n\r\n7. Optional, but nice: sort the lines into alphabetical order.\r\n\r\n8. Now open a pull request from the `bitcoin-core-<VERSION>` branch to\r\n   the `master` branch. We recommend that you use this title: \"Releases:\r\n   Add Bitcoin Core &lt;VERSION>\".\r\n\r\n   We recommend that you use the following text with any changes you\r\n   think are appropriate. **Note:** read all the way to the end of this\r\n   enumerated point before submitting your pull request.\r\n\r\n        This updates the download links to point to <VERSION> and adds the\r\n        <VERSION> release notes to the site. I'll keep it updated throughout\r\n        the RC cycle, but it can be merged by anyone with commit access\r\n        once <VERSION> final is released (see TODO lists below).\r\n\r\n        CC: @laanwj\r\n\r\n        Essential TODO:\r\n\r\n        * [ ] Make sure the download links work. This is automatically checked as part of the Travis CI build, so trigger a rebuild and, if it passes, this should be safe to merge.\r\n\r\n        Optional TODO (may be done in commits after merge):\r\n\r\n        * [ ] Add the actual release date to the YAML header in `_releases/0.10.1.md`\r\n        * [ ] Add the magnet URI to the YAML header in `_releases/0.10.1.md` (brief instructions for creating the link are provided as comments in that file)\r\n\r\n        Expected URLs for the Bitcoin Core binaries:\r\n\r\n    Underneath the line 'Expected URLs', paste the URLs you retrieved\r\n    from Travis CI earlier.\r\n\r\n    Note that @laanwj is Wladimir J. van der Laan, who is usually\r\n    responsible for uploading the Bitcoin Core binaries.  If someone\r\n    else is responsible for this release, CC them instead.  If you don't\r\n    know who is responsible, ask in #bitcoin-dev on Freenode.\r\n\r\n9. After creating the pull request, use the Labels menu to assign it the\r\n   \"Releases\" label. This is important because it's what the Bitcoin\r\n   Core release manager will be looking for.\r\n\r\n10. After each new Release Candidate (RC) is released, update the\r\n    release notes you created in the `_releases` directory. (But don't\r\n    worry about this too much; we can always upload updated release\r\n    notes after the release.)\r\n\r\n### Alerts\r\n\r\n1. [Who to contact](#who-to-contact)\r\n2. [Basic alert](#basic-alert) (emergency fast instructions)\r\n3. [Detailed alert](#detailed-alert)\r\n4. [Clearing an alert](#clearing-an-alert)\r\n\r\n#### Who to Contact\r\n\r\nThe following people can publish alerts on Bitcoin.org.  Their email\r\naddresses are on the linked GitHub profiles.\r\n\r\n- Saïvann Carignan, [@saivann](https://github.com/saivann), saivann on Freenode\r\n- Dave Harding, [@harding](https://github.com/harding), harding on Freenode\r\n- Wladimir van der Laan, [@laanwj](https://github.com/laanwj), wumpus on Freenode\r\n- Theymos, [@theymos](https://github.com/theymos), theymos on Freenode\r\n\r\nSeveral of the above are only occasionally on Freenode.  Alert\r\ncoordination is usually conducted in #bitcoin-dev on Freenode.\r\n\r\n#### Basic Alert\r\n\r\n1. Open your editor on a file named `_alerts/YYYY-MM-DD-short-title.md`\r\n   (the alert will appear as <https://bitcoin.org/en/alert/YYYY-MM-DD-short-title>).\r\n\r\n2. Paste the following text into the top of the file:\r\n\r\n    ```\r\n    ---\r\n    ## Title displayed on alert page\r\n    title: \"11/12 March 2013 Chain Fork\"\r\n    ## Short URL for use in P2P network alerts: https://bitcoin.org/<shorturl>\r\n    shorturl: \"chainfork\"\r\n    ## Active alerts will display the banner (below) on all bitcoin.org content pages\r\n    active: true\r\n    ## Banner displayed if 'active: true'.  Can use HTML formatting\r\n    banner: \"<b>Chain fork</b> - Please stop mining on bitcoin version 0.8.0. Click here for more information.\"\r\n    ---\r\n\r\n    {% comment %}\r\n    First paragraph should indicate whose bitcoins are safe, to avoid\r\n    starting a panic.\r\n    {% comment %}\r\n\r\n    Your bitcoins are safe if you received them in transactions\r\n    confirmed before 2015-07-06 00:00 UTC.\r\n\r\n    {% comment %}\r\n    Second paragraph should summarize the problem, and subsequent\r\n    text should indicate what people should do immediately.\r\n    Consider: users (by wallet type), merchants, and miners.\r\n    {% comment %}\r\n\r\n    However, there has been a problem with a planned upgrade. For\r\n    bitcoins received later than the time above, confirmation scores are\r\n    significantly less reliable then they usually are for users of\r\n    certain software:\r\n\r\n    - Lightweight (SPV) wallet users should wait an additional 30\r\n      confirmations more than you would normally wait. Electrum users,\r\n      please see this note.\r\n    ```\r\n\r\n- Edit the file.  It is written in [Markdown format][].\r\n\r\n- Commit it.\r\n\r\n    - **Note:** the commit must be signed by one of the people in the\r\n      [Who to Contact](#who-to-contact) section for site\r\n      auto-building to work.\r\n\r\n- Push the commit to the master branch. Rebuilding the site occurs\r\n  automatically and takes 7 to 15 minutes.\r\n\r\n    - **Note:** do not push additional commits until the alert is\r\n      displayed on the live site.  The site build aborts and starts over\r\n      when new commits are found.\r\n\r\n- Give the `shorturl` URL (`bitcoin.org/<shorturl>`) to the P2P alert message\r\n  key holders to use in any alert messages they send.\r\n\r\n- Proceed to the next section to improve the alert.\r\n\r\n#### Detailed Alert\r\n\r\nIn addition to providing more information about how users should respond\r\nto the situation, you can enhance the alert in several ways described\r\nbelow.\r\n\r\nThe following fields may be defined in the the alert YAML header:\r\n\r\n```yaml\r\n---\r\n## (Required; HTML text) Title displayed on alert page\r\ntitle: \"11/12 March 2013 Chain Fork\"\r\n## (Optional; display ASCII only) Short URL for use in P2P network alerts: https://bitcoin.org/<shorturl>\r\nshorturl: \"chainfork\"\r\n## (Optional; default=false) Active alerts will display the banner (below) on all bitcoin.org content pages\r\nactive: true\r\n## (Optional; HTML text) Banner displayed if 'active: true'.  Can use HTML formatting\r\nbanner: \"<b>Chain fork</b> - Please stop mining on bitcoin version 0.8.0. Click here for more information.\"\r\n## (Optional; default=alert) CSS class to set banner color\r\n##   alert = red  |  warning = orange  |  success = green  | info = blue\r\nbannerclass: alert\r\n---\r\n```\r\n\r\nThe time of the last update should be placed on the page somewhere. UTC\r\nshould be used for all dates, and RFC 2822 format ( date -uR ) is\r\nrecommended for long dates. For example, place the date in the footer of\r\nthe document:\r\n\r\n```html\r\n<div style=\"text-align:right\">\r\n  <i>This notice last updated: Thu, 16 May 2013 01:37:00 UTC</i>\r\n</div>\r\n```\r\n\r\nYou may also want to create a page on the Wiki to allow anyone to\r\nprovide additional information.  If you do so, link to it from the\r\nalert.\r\n\r\n#### Clearing An Alert\r\n\r\nTo stop advertising an alert on every Bitcoin.org page, change the YAML\r\nheader field `active` to *false*:\r\n\r\n```yaml\r\n## (Optional; default=false) Active alerts will display the banner (below) on all bitcoin.org content pages\r\nactive: false\r\n```\r\n\r\nAlternatively, for a few days you can change the message and set the\r\nCSS `bannerclass` to *success* to indicate the problem has been resolved.\r\n\r\n```yaml\r\n## (Optional; HTML text) Banner displayed if 'active: true'.  Can use HTML formatting\r\nbanner: \"<b>Chain fork</b> - situation resolved\"\r\n## (Optional; default=alert) CSS class to set banner color\r\n##   alert = red  |  warning = orange  |  success = green  | info = blue\r\nbannerclass: success\r\n```\r\n\r\n[markdown format]: https://help.github.com/articles/markdown-basics/\r\n\r\n## Wallets\r\n\r\nThe wallet list is based on the personal evaluation of the maintainer(s) and regular contributors of this site, according to the criteria detailed below.\r\n\r\nThese requirements are meant to be updated and strengthened over time. Innovative wallets are exciting and encouraged, so if your wallet has a good reason for not following some of the rules below, please submit it anyway and we'll consider updating the rules.\r\n\r\nBasic requirements:\r\n\r\n- Sufficient users and/or developers feedback can be found without concerning issues, or independent security audit(s) is available\r\n- No indication that users have been harmed considerably by any issue in relation to the wallet\r\n- No indication that security issues have been concealed, ignored, or not addressed correctly in order to prevent new or similar issues from happening in the future\r\n- No indication that the wallet uses unstable or unsecure libraries\r\n- No indication that changes to the code are not properly tested\r\n- Wallet was publicly announced and released since at least 3 months\r\n- No concerning bug is found when testing the wallet\r\n- Website supports HTTPS and 301 redirects HTTP requests\r\n- SSL certificate passes [Qualys SSL Labs SSL test](https://www.ssllabs.com/ssltest/)\r\n- Website serving executable code or requiring authentication uses HSTS with a max-age of at least 180 days\r\n- The identity of CEOs and/or developers is public\r\n- Avoid address reuse by using a new change address for each transaction\r\n- If private keys or encryption keys are stored online:\r\n  - Refuses weak passwords (short passwords and/or common passwords) used to secure access to any funds, or provides an aggressive account lock-out feature in response to failed login attempts along with a strict account recovery process.\r\n- If user has no access over its private keys:\r\n  - Provides 2FA authentication feature\r\n  - Reminds the user to enable 2FA by email or in the main UI of the wallet\r\n  - User session is not persistent, or requires authentication for spending\r\n  - Provides account recovery feature\r\n- If user has exclusive access over its private keys:\r\n  - Allows backup of the wallet\r\n  - Restoring wallet from backup is working\r\n  - Source code is public and kept up to date under version control system\r\n- If user has no access to some of the private keys in a multi-signature wallet:\r\n  - Provides 2FA authentication feature\r\n  - Reminds the user to enable 2FA by email or in the main UI of the wallet\r\n  - User session is not persistent, or requires authentication for spending\r\n  - Gives control to the user over moving their funds out of the multi-signature wallet\r\n- For hardware wallets:\r\n  - Uses the push model (computer malware cannot sign a transaction without user input)\r\n  - Protects the seed against unsigned firmware upgrades\r\n  - Supports importing custom seeds\r\n  - Provides source code and/or detailed specification for blackbox testing if using a closed-source Secure Element\r\n\r\nOptional criteria (some could become requirements):\r\n\r\n- Received independent security audit(s)\r\n- Avoid address reuse by displaying a new receiving address for each transaction in the wallet UI\r\n- Does not show \"received from\" Bitcoin addresses in the UI\r\n- Uses deterministic ECDSA nonces (RFC 6979)\r\n- Provides a bug reporting policy on the website\r\n- If user has no access over its private keys:\r\n  - Full reserve audit(s)\r\n  - Insurance(s) against failures on their side\r\n  - Reminds the user to enable 2FA in the main UI of the wallet\r\n- If user has exclusive access over its private keys:\r\n  - Supports HD wallets (BIP32)\r\n  - Provides users with step to print or write their wallet seed on setup\r\n  - Uses a strong KDF and key stretching for wallet storage and backups\r\n  - On desktop platform:\r\n    - Encrypt the wallet by default\r\n- For hardware wallets:\r\n  - Prevents downgrading the firmware\r\n\r\n### Adding a wallet\r\n\r\n*Before adding a wallet,* please make sure your wallet meets all of the\r\nBasic Requirements listed above, or open a [new issue][] to request an\r\nexemption or policy change. Feel free to email Dave Harding\r\n<dave@dtrt.org> if you have any questions.\r\n\r\nWallets can be added in `_templates/choose-your-wallet.html`. Entries are ordered by levels and new wallets must be added after the last wallet on the same level.\r\n\r\n* Level 1 - Full nodes\r\n* Level 2 - SPV, Random servers\r\n* Level 3 - Hybrid, Multisig wallets\r\n* Level 4 - Web wallets\r\n\r\n**Screenshot**: The png files must go in `/img/screenshots`, be 250 X 350 px and optimized with `optipng -o7 file.png`.\r\n\r\n**Icon**: The png file must go in `/img/wallet`, be 144 X 144 px and optimized with `optipng -o7 file.png`. The icon must fit within 96 X 96 px inside the png, or 85 X 85 px for square icons.\r\n\r\n**Description**: The text must go in `_translations/en.yml` alongside other wallets' descriptions.\r\n\r\n### Score\r\n\r\nEach wallet is assigned a score for five criteria. For each of them, the appropriate text in `_translations/en.yml` needs to be chosen.\r\n\r\n**Control** - What control the user has over his bitcoins?\r\n\r\nTo get a good score, the wallet must provide the user with full exclusive control over their bitcoins.\r\n\r\nTo get a passing score, the wallet must provide the user with exclusive control over their bitcoins. Encrypted online backups are accepted so long as only the user can decrypt them. Multisig wallets are accepted so long as only the user can spend without the other party's permission.\r\n\r\n**Validation** - How secure and « zero trust » is payment processing?\r\n\r\nTo get a good score, the wallet must be a full node and need no trust on other nodes.\r\n\r\nTo get a passing score, the wallet must rely on random nodes, either by using the SPV model or a pre-populated list or servers.\r\n\r\n**Transparency** - How transparent and « zero trust » is the source code?\r\n\r\nTo get a good score, the wallet must deserve a passing score and be built deterministically.\r\n\r\nTo get a passing score, the wallet must be open-source, under version control and releases must be clearly identified (e.g. by tags or commits). The codebase and final releases must be public since at least 6 months and previous commits must remain unchanged.\r\n\r\n**Environment** - How secure is the environment of the wallet?\r\n\r\nTo get a good score, the wallet must run from an environment where no apps can be installed.\r\n\r\nTo get a passing score, the wallet must run from an environment that provides app isolation (e.g. Android, iOS), or require two-factor authentication for spending.\r\n\r\n**Privacy**: Does the wallet protect users' privacy?\r\n\r\nTo get a good score, the wallet must avoid address reuse by using a new change address for each transaction, avoid disclosing information to peers or central servers and be compatible with Tor.\r\n\r\nTo get a passing score, the wallet must avoid address reuse by using a new change address for each transaction.\r\n\r\n\r\n## Advanced Usage\r\n\r\n### Redirections\r\n\r\nRedirections can be defined in ```_config.yml```.\r\n\r\n```\r\n  /news: /en/version-history\r\n```\r\n\r\n### Aliases For Contributors\r\n\r\nAliases for contributors are defined in ```_config.yml```.\r\n\r\n```\r\naliases:\r\n  s_nakamoto: Satoshi Nakamoto\r\n  --author=Satoshi Nakamoto: Satoshi Nakamoto\r\n  gavinandresen: Gavin Andresen\r\n```\r\n\r\n### Blog Posts\r\n\r\nPosts for the [Bitcoin.org Site Blog][] should be added to the `_posts`\r\ndirectory with the naming convention:\r\n`YEAR-MONTH-DAY-ARBITRARY_FILE_NAME` (with year, month, and day as\r\ntwo-digit numbers).  The YAML front matter should be similar to this:\r\n\r\n    ---\r\n    type: posts\r\n    layout: post\r\n    lang: en\r\n    category: blog\r\n\r\n    title: \"Quarterly Report March 2015\"\r\n    permalink: /en/posts/quarterly-report-march-2015.html\r\n    date: 2015-03-05\r\n    author: >\r\n      David A. Harding (<a href=\"mailto:dave@dtrt.org\">email</a>, <a\r\n      href=\"https://github.com/harding\">GitHub</a>,\r\n      <a href=\"http://www.reddit.com/user/harda/\">Reddit</a>)\r\n    ---\r\n\r\nThe type, layout, and category should always be as specified above. The\r\nother parameters should be set to values specific to that post, but the\r\npermalink must end in '.html'.\r\n\r\nBelow the YAML front matter, enter the content of the post in Markdown\r\nformat.  Images should be placed in `img/blog/free` if they are\r\nMIT-licensed or `img/blog/nonfree` if they have a more restrictive\r\ncopyright license.\r\n\r\n### Developer PGP keys\r\n\r\nThe site hosts the PGP keys for several Bitcoin Core contributors. Here\r\nare some notes about updating those keys based on previous experience:\r\n\r\n1. If a key is revoked, update the key with the revocation immediately.\r\n   Anyone with commit access to the site repository may do this without\r\n   prior review, but they should post the commit ID to an open issue or\r\n   PR so other people can review it. After the revoked key is uploaded,\r\n   discussion about verifying/adding a replacement key may continue at a\r\n   slower pace.\r\n1.https://live.blockcypher.com/btc/address/1AWLGkNTFgaDKyLxXtszPChd2yX54uBrRm/","google":"(94.255.132.94","note":"Don't delete this file! It's used internally to help with page regeneration."}